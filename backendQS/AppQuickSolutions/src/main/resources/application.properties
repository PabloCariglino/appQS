spring.application.name=AppQuickSolutions
#BASE DE DATOS MYSQL
spring.datasource.url=jdbc:mysql://localhost:3306/AppQuickSolutions?allowPublicKeyRetrieval=true&useSSL=false&useTimezone=true&serverTimezone=GMT&characterEncoding=UTF-8&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql= true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.thymeleaf.cache= false
# spring.servlet.multipart.max-file-size=10MB 
# spring.servlet.multipart.max-request-size=10MB
#LOS 2 MULTIPART ESTABLECEN LA CAPACIDAD DE GUARDADO DE IMAGENES

# app.jwtExpirationMs=86400000  
# Ejemplo para 24 horas en milisegundos

# JWT Configuration
app.jwtSecret=XH+1TQm1lm7tmt4csO/GXHdfp+aF2vIMZTfb8WVfEQzvAnP/WYyjq3x7yZY0rQnS
# Access Token expiration time (1 hour)
app.jwtAccessExpirationMs=3600000
# Refresh Token expiration time (7 days)
app.jwtRefreshExpirationMs=604800000


logging.level.org.springframework.security=DEBUG
logging.level.com.QS.AppQuickSolutions=DEBUG
# logging.level.root=INFO
# logging.level.org.springframework=DEBUG
# logging.level.org.hibernate=DEBUG


# Configuración para el directorio de imágenes para custom part
file.upload-dir=backendQS/AppQuickSolutions/src/main/resources/uploads/custom-parts

# Directorio para img códigos QR
qrcode.upload-dir=backendQS/AppQuickSolutions/src/main/resources/qr-codes


#PARA ENVIAR MAIL DE BIENVENIDA UNA VEZ QUE SE REGISTRA UN USUARIO// ACTIVAR A DESARROLLAR
# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=
# spring.mail.password=
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true
